/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userinterface.AdministrativeRole;

import Business.Enterprise.Enterprise;
import Business.ItemCatalogue.Items;
import Business.ItemCatalogue.ItemsDirectory;
import Business.Orders.Orders;
import Business.Organization.Organization;
import Business.Organization.OrganizationDirectory;
import java.awt.CardLayout;
import static java.lang.Integer.parseInt;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author tarushukla
 */
public class ManageSuppliesJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageSuppliesJPanel
     */
    private Enterprise enterprise;
    private JPanel userProcessContainer;
    private Organization organization;
    private OrganizationDirectory orgdir;
    private ItemsDirectory itemsdir;
    private Orders order;
    private ArrayList<Items> orderItems = new ArrayList<Items>();
    private ArrayList<Orders> orderplaced = new ArrayList<Orders>();
    public ManageSuppliesJPanel(JPanel userProcessContainer, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.orgdir = enterprise.getOrganizationDirectory();
        System.out.println("Enterprise Name :" + enterprise.getOrgName());
        System.out.println("Enterprise Type :" + enterprise.getEnterpriseType().getValue());
        populateOrgCombo();
        populateItemsTable();
        populateCartTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        enterpriseLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        cartJTable = new javax.swing.JTable();
        btnAddtoCart = new javax.swing.JButton();
        btnRemovefromCart = new javax.swing.JButton();
        enterpriseLabel2 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        btnConfirmOrder = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tfTotalPrice = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        organizationJComboBox = new javax.swing.JComboBox<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        menuJTable = new javax.swing.JTable();
        tfOrgType = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        tfQuantity = new javax.swing.JTextField();

        enterpriseLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel.setForeground(new java.awt.Color(0, 102, 204));
        enterpriseLabel.setText("Available Items");

        cartJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Name", "Quantity", "Description", "Price(per Item)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(cartJTable);

        btnAddtoCart.setBackground(new java.awt.Color(0, 102, 204));
        btnAddtoCart.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnAddtoCart.setForeground(new java.awt.Color(255, 255, 255));
        btnAddtoCart.setText("Add Item to Cart");
        btnAddtoCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddtoCartActionPerformed(evt);
            }
        });

        btnRemovefromCart.setBackground(new java.awt.Color(255, 255, 255));
        btnRemovefromCart.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnRemovefromCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemovefromCartActionPerformed(evt);
            }
        });

        enterpriseLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel2.setForeground(new java.awt.Color(0, 102, 204));
        enterpriseLabel2.setText("Cart Details");

        backJButton.setBackground(new java.awt.Color(255, 255, 255));
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        btnConfirmOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmOrderActionPerformed(evt);
            }
        });

        jLabel1.setForeground(new java.awt.Color(0, 102, 204));
        jLabel1.setText("Select Organization");

        jLabel2.setForeground(new java.awt.Color(0, 102, 204));
        jLabel2.setText("Total Amount");

        jLabel3.setForeground(new java.awt.Color(0, 102, 204));
        jLabel3.setText("Organization Type");

        organizationJComboBox.setBackground(new java.awt.Color(0, 102, 204));
        organizationJComboBox.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        organizationJComboBox.setForeground(new java.awt.Color(255, 255, 255));
        organizationJComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Organization 1", "Organization 2", "Organization 3", "Organization 4" }));
        organizationJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                organizationJComboBoxActionPerformed(evt);
            }
        });

        menuJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Name", "Description", "Price(per Item)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(menuJTable);

        tfOrgType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfOrgTypeActionPerformed(evt);
            }
        });

        jLabel4.setText("Set Quantity");

        tfQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfQuantityActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(organizationJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfOrgType, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(enterpriseLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 674, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(tfQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(275, 275, 275)
                        .addComponent(btnAddtoCart, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(enterpriseLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 674, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(btnRemovefromCart, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(415, 415, 415)
                        .addComponent(btnConfirmOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(jLabel2)
                        .addGap(8, 8, 8)
                        .addComponent(tfTotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel1)
                        .addGap(20, 20, 20)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(organizationJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addComponent(tfOrgType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(11, 11, 11)
                .addComponent(enterpriseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(tfQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnAddtoCart))
                .addGap(6, 6, 6)
                .addComponent(enterpriseLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRemovefromCart, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnConfirmOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(tfTotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddtoCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddtoCartActionPerformed
        // TODO add your handling code here:
        if(tfQuantity.getText().isEmpty()){
            JOptionPane.showMessageDialog(null,"Enter Quantity","ERROR",JOptionPane.ERROR_MESSAGE);
        }
        int selectedMenuRow = menuJTable.getSelectedRow();
        if(selectedMenuRow<0){
            JOptionPane.showMessageDialog(null,"Select a row","Warning",JOptionPane.WARNING_MESSAGE);
        }
        Items item = itemsdir.getItem(menuJTable.getValueAt(selectedMenuRow, 0).toString());
        if(parseInt(tfQuantity.getText()) > item.getItemquantity()){
            JOptionPane.showMessageDialog(null,"Order Quantity exceed number of available items","Warning",JOptionPane.WARNING_MESSAGE);
        }else{
            item.setItemquantity(parseInt(tfQuantity.getText()));
            orderItems.add(item);
            JOptionPane.showMessageDialog(cartJTable, "Item added to the cart");
            populateItemsTable();
            populateCartTable();
        }
    }//GEN-LAST:event_btnAddtoCartActionPerformed

    private void btnRemovefromCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemovefromCartActionPerformed
        // TODO add your handling code here:
        int selectedCartRow = cartJTable.getSelectedRow();
        if(selectedCartRow<0){
            JOptionPane.showMessageDialog(null,"Select a row","Warning",JOptionPane.WARNING_MESSAGE);
        }
        Items item = itemsdir.getItem(menuJTable.getValueAt(selectedCartRow, 0).toString());

        orderItems.remove(item);
        JOptionPane.showMessageDialog(cartJTable, "Item deleted from the cart");
        populateCartTable();
    }//GEN-LAST:event_btnRemovefromCartActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void btnConfirmOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmOrderActionPerformed
        int total = 0;
        for(Items i : orderItems){
            total = total + parseInt(i.getItemprice())*i.getItemquantity();
        }
        tfTotalPrice.setText(String.valueOf(total));
        order = new Orders(organization.getOrgName(), enterprise.getOrgName(), orderItems, total, enterprise.getOrgAddress(), organization.getOrgAddress());
        orderplaced.add(order);
        organization.getOrders().add(order);
        JOptionPane.showMessageDialog(cartJTable, "Order Placed successfully");
    }//GEN-LAST:event_btnConfirmOrderActionPerformed

    private void organizationJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_organizationJComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_organizationJComboBoxActionPerformed

    private void tfOrgTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfOrgTypeActionPerformed
        // TODO add your handling code here:
        tfOrgType.setText(organization.getType());
    }//GEN-LAST:event_tfOrgTypeActionPerformed

    private void tfQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfQuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfQuantityActionPerformed
        private void populateItemsTable() {
        
        DefaultTableModel model = (DefaultTableModel) menuJTable.getModel();
        model.setRowCount(0);
        for(Items i : itemsdir.getItemsList()){
            Object[] row = new Object[3];
            row[0] = i.getItemname();
            row[1] = i.getItemdesc();
            row[2] = i.getItemprice();
            model.addRow(row);
        }
    }
    private void populateCartTable() {
        //cartJTable
        DefaultTableModel model = (DefaultTableModel) cartJTable.getModel();
        model.setRowCount(0);
        for(Items i : orderItems){
            Object[] row = new Object[4];
            row[0] = i.getItemname();
            row[1] = i.getItemquantity();
            row[2] = i.getItemdesc();
            row[3] = i.getItemprice();
            
            model.addRow(row);
        }
    }
        private void populateOrgCombo(){
        organizationJComboBox.removeAllItems();
        for(Organization o : orgdir.getOrganizationList()){
            if(enterprise.getEnterpriseType().getValue().equalsIgnoreCase("Transport")){
                if(o.getType().equalsIgnoreCase("Buy Car")){
                    organizationJComboBox.addItem(o.getOrgName());
                }
            }
            else if(enterprise.getEnterpriseType().getValue().equalsIgnoreCase("Clothing")){
                if(o.getType().equalsIgnoreCase("Ready Made Clothes")){
                    organizationJComboBox.addItem(o.getOrgName());
                }
            }
            else if(enterprise.getEnterpriseType().getValue().equalsIgnoreCase("Electronics")){
                if(o.getType().equalsIgnoreCase("Accessories")){
                    organizationJComboBox.addItem(o.getOrgName());
                }
            }
            else if(enterprise.getEnterpriseType().getValue().equalsIgnoreCase("FoodProducts")){
                if(o.getType().equalsIgnoreCase("Restaurant")){
                    organizationJComboBox.addItem(o.getOrgName());
                }
            }
             else if(enterprise.getEnterpriseType().getValue().equalsIgnoreCase("HealthCare")){
                if(o.getType().equalsIgnoreCase("Medicine")){
                    organizationJComboBox.addItem(o.getOrgName());
                }
            }
        }
        String name = (String) organizationJComboBox.getSelectedItem();
        for(Organization o : orgdir.getOrganizationList()){
            if(o.getOrgName().equalsIgnoreCase(name)){
                organization = o;
                itemsdir = organization.getItemsDirectory();
                tfOrgType.setText(organization.getType()); 
            }
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnAddtoCart;
    private javax.swing.JButton btnConfirmOrder;
    private javax.swing.JButton btnRemovefromCart;
    private javax.swing.JTable cartJTable;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JLabel enterpriseLabel2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable menuJTable;
    private javax.swing.JComboBox<String> organizationJComboBox;
    private javax.swing.JTextField tfOrgType;
    private javax.swing.JTextField tfQuantity;
    private javax.swing.JTextField tfTotalPrice;
    // End of variables declaration//GEN-END:variables
}
